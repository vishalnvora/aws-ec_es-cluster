{
    "version": 3,
    "terraform_version": "0.10.8",
    "serial": 1,
    "lineage": "5b349aac-a210-4537-a260-91c7122e67da",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "clients_dns": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "internal-es-prod-cluster-client-lb-1332883358.us-east-2.elb.amazonaws.com"
                    ]
                }
            },
            "resources": {
                "aws_autoscaling_group.client_nodes": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_elb.es_client_lb",
                        "aws_launch_configuration.client"
                    ],
                    "primary": {
                        "id": "elasticsearch-es-prod-cluster-client-nodes",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-east-2:102725665491:autoScalingGroup:7743f76e-93a1-4e7e-9ddf-5bb758bfbb5c:autoScalingGroupName/elasticsearch-es-prod-cluster-client-nodes",
                            "availability_zones.#": "1",
                            "availability_zones.4293815384": "us-east-2a",
                            "default_cooldown": "30",
                            "desired_capacity": "1",
                            "enabled_metrics.#": "0",
                            "force_delete": "true",
                            "health_check_grace_period": "300",
                            "health_check_type": "EC2",
                            "id": "elasticsearch-es-prod-cluster-client-nodes",
                            "launch_configuration": "elasticsearch-es-prod-cluster-client-nodes20210105084323779700000003",
                            "launch_template.#": "0",
                            "load_balancers.#": "1",
                            "load_balancers.1968204125": "es-prod-cluster-client-lb",
                            "max_instance_lifetime": "0",
                            "max_size": "1",
                            "metrics_granularity": "1Minute",
                            "min_size": "1",
                            "mixed_instances_policy.#": "0",
                            "name": "elasticsearch-es-prod-cluster-client-nodes",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "service_linked_role_arn": "arn:aws:iam::102725665491:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
                            "suspended_processes.#": "0",
                            "tag.#": "4",
                            "tag.1566023184.key": "Cluster",
                            "tag.1566023184.propagate_at_launch": "true",
                            "tag.1566023184.value": "default-es-prod-cluster",
                            "tag.157761248.key": "Environment",
                            "tag.157761248.propagate_at_launch": "true",
                            "tag.157761248.value": "default",
                            "tag.2180192189.key": "Role",
                            "tag.2180192189.propagate_at_launch": "true",
                            "tag.2180192189.value": "client",
                            "tag.572764827.key": "Name",
                            "tag.572764827.propagate_at_launch": "true",
                            "tag.572764827.value": "es-prod-cluster-client-node",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "1",
                            "vpc_zone_identifier.2885426566": "subnet-eb7ede80",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_autoscaling_group.data_nodes": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_autoscaling_group.master_nodes",
                        "aws_launch_configuration.data"
                    ],
                    "primary": {
                        "id": "elasticsearch-es-prod-cluster-data-nodes",
                        "attributes": {
                            "default_cooldown": "30",
                            "desired_capacity": "2",
                            "force_delete": "true",
                            "health_check_grace_period": "300",
                            "id": "elasticsearch-es-prod-cluster-data-nodes",
                            "launch_configuration": "elasticsearch-es-prod-cluster-data-nodes20210105084323626100000002",
                            "load_balancers.#": "0",
                            "max_size": "2",
                            "metrics_granularity": "1Minute",
                            "min_size": "2",
                            "name": "elasticsearch-es-prod-cluster-data-nodes",
                            "protect_from_scale_in": "false",
                            "tag.#": "4",
                            "tag.1566023184.key": "Cluster",
                            "tag.1566023184.propagate_at_launch": "true",
                            "tag.1566023184.value": "default-es-prod-cluster",
                            "tag.157761248.key": "Environment",
                            "tag.157761248.propagate_at_launch": "true",
                            "tag.157761248.value": "default",
                            "tag.2488862057.key": "Name",
                            "tag.2488862057.propagate_at_launch": "true",
                            "tag.2488862057.value": "es-prod-cluster-data-node",
                            "tag.2915266556.key": "Role",
                            "tag.2915266556.propagate_at_launch": "true",
                            "tag.2915266556.value": "data",
                            "target_group_arns.#": "0",
                            "vpc_zone_identifier.#": "1",
                            "vpc_zone_identifier.2885426566": "subnet-eb7ede80",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_autoscaling_group.master_nodes": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_launch_configuration.master"
                    ],
                    "primary": {
                        "id": "elasticsearch-es-prod-cluster-master-nodes",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-east-2:102725665491:autoScalingGroup:87ec6957-f2bf-4439-9bfe-6d3546f7ad36:autoScalingGroupName/elasticsearch-es-prod-cluster-master-nodes",
                            "availability_zones.#": "1",
                            "availability_zones.4293815384": "us-east-2a",
                            "default_cooldown": "30",
                            "desired_capacity": "1",
                            "enabled_metrics.#": "0",
                            "force_delete": "true",
                            "health_check_grace_period": "300",
                            "health_check_type": "EC2",
                            "id": "elasticsearch-es-prod-cluster-master-nodes",
                            "launch_configuration": "elasticsearch-es-prod-cluster-master-nodes20210105084323603100000001",
                            "launch_template.#": "0",
                            "load_balancers.#": "0",
                            "max_instance_lifetime": "0",
                            "max_size": "1",
                            "metrics_granularity": "1Minute",
                            "min_size": "1",
                            "mixed_instances_policy.#": "0",
                            "name": "elasticsearch-es-prod-cluster-master-nodes",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "service_linked_role_arn": "arn:aws:iam::102725665491:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
                            "suspended_processes.#": "0",
                            "tag.#": "4",
                            "tag.1566023184.key": "Cluster",
                            "tag.1566023184.propagate_at_launch": "true",
                            "tag.1566023184.value": "default-es-prod-cluster",
                            "tag.157761248.key": "Environment",
                            "tag.157761248.propagate_at_launch": "true",
                            "tag.157761248.value": "default",
                            "tag.3127455060.key": "Name",
                            "tag.3127455060.propagate_at_launch": "true",
                            "tag.3127455060.value": "es-prod-cluster-master-node",
                            "tag.383510491.key": "Role",
                            "tag.383510491.propagate_at_launch": "true",
                            "tag.383510491.value": "master",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "1",
                            "vpc_zone_identifier.2885426566": "subnet-eb7ede80",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_elb.es_client_lb": {
                    "type": "aws_elb",
                    "depends_on": [
                        "aws_security_group.elasticsearch_clients_security_group_elb"
                    ],
                    "primary": {
                        "id": "es-prod-cluster-client-lb",
                        "attributes": {
                            "access_logs.#": "0",
                            "arn": "arn:aws:elasticloadbalancing:us-east-2:102725665491:loadbalancer/es-prod-cluster-client-lb",
                            "availability_zones.#": "1",
                            "availability_zones.4293815384": "us-east-2a",
                            "connection_draining": "true",
                            "connection_draining_timeout": "400",
                            "cross_zone_load_balancing": "true",
                            "dns_name": "internal-es-prod-cluster-client-lb-1332883358.us-east-2.elb.amazonaws.com",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "2",
                            "health_check.0.interval": "6",
                            "health_check.0.target": "HTTP:8080/status",
                            "health_check.0.timeout": "3",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "es-prod-cluster-client-lb",
                            "idle_timeout": "400",
                            "instances.#": "0",
                            "internal": "true",
                            "listener.#": "3",
                            "listener.1661633718.instance_port": "9200",
                            "listener.1661633718.instance_protocol": "http",
                            "listener.1661633718.lb_port": "9200",
                            "listener.1661633718.lb_protocol": "http",
                            "listener.1661633718.ssl_certificate_id": "",
                            "listener.2393404040.instance_port": "3000",
                            "listener.2393404040.instance_protocol": "http",
                            "listener.2393404040.lb_port": "3000",
                            "listener.2393404040.lb_protocol": "http",
                            "listener.2393404040.ssl_certificate_id": "",
                            "listener.3931999347.instance_port": "8080",
                            "listener.3931999347.instance_protocol": "http",
                            "listener.3931999347.lb_port": "80",
                            "listener.3931999347.lb_protocol": "http",
                            "listener.3931999347.ssl_certificate_id": "",
                            "name": "es-prod-cluster-client-lb",
                            "security_groups.#": "1",
                            "security_groups.3384993644": "sg-008db5f61dea46c55",
                            "source_security_group": "102725665491/elasticsearch-es-prod-cluster-clients-security-group_elb",
                            "source_security_group_id": "sg-008db5f61dea46c55",
                            "subnets.#": "1",
                            "subnets.2885426566": "subnet-eb7ede80",
                            "tags.%": "1",
                            "tags.Name": "es-prod-cluster-client-lb",
                            "zone_id": "Z3AADJGX6KTTL2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.elasticsearch": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.elasticsearch"
                    ],
                    "primary": {
                        "id": "es-prod-cluster-elasticsearch-discovery-profile",
                        "attributes": {
                            "arn": "arn:aws:iam::102725665491:instance-profile/es-prod-cluster-elasticsearch-discovery-profile",
                            "create_date": "2021-01-05T08:43:10Z",
                            "id": "es-prod-cluster-elasticsearch-discovery-profile",
                            "name": "es-prod-cluster-elasticsearch-discovery-profile",
                            "path": "/",
                            "role": "es-prod-cluster-elasticsearch-discovery-role",
                            "roles.#": "0",
                            "unique_id": "AIPARP2XNILJ3TFIEE2B3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.elasticsearch": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "es-prod-cluster-elasticsearch-discovery-role",
                        "attributes": {
                            "arn": "arn:aws:iam::102725665491:role/es-prod-cluster-elasticsearch-discovery-role",
                            "assume_role_policy": "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"s3.amazonaws.com\",\"ec2.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2021-01-05T08:43:07Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "es-prod-cluster-elasticsearch-discovery-role",
                            "max_session_duration": "3600",
                            "name": "es-prod-cluster-elasticsearch-discovery-role",
                            "path": "/",
                            "tags.%": "0",
                            "unique_id": "AROARP2XNILJWHQADW7RJ"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy.elasticsearch": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.elasticsearch"
                    ],
                    "primary": {
                        "id": "es-prod-cluster-elasticsearch-discovery-role:es-prod-cluster-elasticsearch-discovery-policy",
                        "attributes": {
                            "id": "es-prod-cluster-elasticsearch-discovery-role:es-prod-cluster-elasticsearch-discovery-policy",
                            "name": "es-prod-cluster-elasticsearch-discovery-policy",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:DescribeInstances\",\n        \"s3:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ],\n  \"Version\": \"2012-10-17\"\n}",
                            "role": "es-prod-cluster-elasticsearch-discovery-role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_launch_configuration.client": {
                    "type": "aws_launch_configuration",
                    "depends_on": [
                        "aws_iam_instance_profile.elasticsearch",
                        "aws_security_group.elasticsearch_clients_security_group",
                        "aws_security_group.elasticsearch_security_group",
                        "data.aws_ami.kibana_client",
                        "data.template_file.client_userdata_script"
                    ],
                    "primary": {
                        "id": "elasticsearch-es-prod-cluster-client-nodes20210105084323779700000003",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-east-2:102725665491:launchConfiguration:0d80a6f5-05f2-4f8c-9afb-1ed4faef9b68:launchConfigurationName/elasticsearch-es-prod-cluster-client-nodes20210105084323779700000003",
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "es-prod-cluster-elasticsearch-discovery-profile",
                            "id": "elasticsearch-es-prod-cluster-client-nodes20210105084323779700000003",
                            "image_id": "ami-0c2303831b8f84d93",
                            "instance_type": "t2.micro",
                            "key_name": "elasticsearch",
                            "name": "elasticsearch-es-prod-cluster-client-nodes20210105084323779700000003",
                            "name_prefix": "elasticsearch-es-prod-cluster-client-nodes",
                            "root_block_device.#": "0",
                            "security_groups.#": "2",
                            "security_groups.1484332320": "sg-0472519fa772feb1c",
                            "security_groups.2577584525": "sg-0691e18b01a12e792",
                            "spot_price": "",
                            "user_data": "25c217ea334e9e9759dac432948f7956c7c7e6a5",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_launch_configuration.data": {
                    "type": "aws_launch_configuration",
                    "depends_on": [
                        "aws_iam_instance_profile.elasticsearch",
                        "aws_security_group.elasticsearch_security_group",
                        "data.aws_ami.elasticsearch",
                        "data.template_file.data_userdata_script"
                    ],
                    "primary": {
                        "id": "elasticsearch-es-prod-cluster-data-nodes20210105084323626100000002",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-east-2:102725665491:launchConfiguration:1efa9b1c-a47c-4d70-bc68-5241d24cb168:launchConfigurationName/elasticsearch-es-prod-cluster-data-nodes20210105084323626100000002",
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "1",
                            "ebs_block_device.2072740667.delete_on_termination": "true",
                            "ebs_block_device.2072740667.device_name": "/dev/xvdh",
                            "ebs_block_device.2072740667.encrypted": "true",
                            "ebs_block_device.2072740667.iops": "0",
                            "ebs_block_device.2072740667.no_device": "false",
                            "ebs_block_device.2072740667.snapshot_id": "",
                            "ebs_block_device.2072740667.volume_size": "100",
                            "ebs_block_device.2072740667.volume_type": "",
                            "ebs_optimized": "true",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "es-prod-cluster-elasticsearch-discovery-profile",
                            "id": "elasticsearch-es-prod-cluster-data-nodes20210105084323626100000002",
                            "image_id": "ami-0cefa5d93ab05f8b9",
                            "instance_type": "t2.micro",
                            "key_name": "elasticsearch",
                            "name": "elasticsearch-es-prod-cluster-data-nodes20210105084323626100000002",
                            "name_prefix": "elasticsearch-es-prod-cluster-data-nodes",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.1484332320": "sg-0472519fa772feb1c",
                            "spot_price": "",
                            "user_data": "38829d246b6446394b95b578c71a12c5525fc054",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_launch_configuration.master": {
                    "type": "aws_launch_configuration",
                    "depends_on": [
                        "aws_iam_instance_profile.elasticsearch",
                        "aws_security_group.elasticsearch_security_group",
                        "data.aws_ami.elasticsearch",
                        "data.template_file.master_userdata_script"
                    ],
                    "primary": {
                        "id": "elasticsearch-es-prod-cluster-master-nodes20210105084323603100000001",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-east-2:102725665491:launchConfiguration:3139162d-fa97-4029-9da6-c1fcc675193d:launchConfigurationName/elasticsearch-es-prod-cluster-master-nodes20210105084323603100000001",
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "es-prod-cluster-elasticsearch-discovery-profile",
                            "id": "elasticsearch-es-prod-cluster-master-nodes20210105084323603100000001",
                            "image_id": "ami-0cefa5d93ab05f8b9",
                            "instance_type": "t2.micro",
                            "key_name": "elasticsearch",
                            "name": "elasticsearch-es-prod-cluster-master-nodes20210105084323603100000001",
                            "name_prefix": "elasticsearch-es-prod-cluster-master-nodes",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.1484332320": "sg-0472519fa772feb1c",
                            "spot_price": "",
                            "user_data": "1650e2f45f01ba41677e82636e0f8a4695cd51ac",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.elasticsearch_clients_security_group": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-0691e18b01a12e792",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:102725665491:security-group/sg-0691e18b01a12e792",
                            "description": "Kibana HTTP access from outside",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0691e18b01a12e792",
                            "ingress.#": "3",
                            "ingress.1994621032.cidr_blocks.#": "1",
                            "ingress.1994621032.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1994621032.description": "",
                            "ingress.1994621032.from_port": "3000",
                            "ingress.1994621032.ipv6_cidr_blocks.#": "0",
                            "ingress.1994621032.prefix_list_ids.#": "0",
                            "ingress.1994621032.protocol": "tcp",
                            "ingress.1994621032.security_groups.#": "0",
                            "ingress.1994621032.self": "false",
                            "ingress.1994621032.to_port": "3000",
                            "ingress.2500694996.cidr_blocks.#": "1",
                            "ingress.2500694996.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2500694996.description": "",
                            "ingress.2500694996.from_port": "9200",
                            "ingress.2500694996.ipv6_cidr_blocks.#": "0",
                            "ingress.2500694996.prefix_list_ids.#": "0",
                            "ingress.2500694996.protocol": "tcp",
                            "ingress.2500694996.security_groups.#": "0",
                            "ingress.2500694996.self": "false",
                            "ingress.2500694996.to_port": "9200",
                            "ingress.516175195.cidr_blocks.#": "1",
                            "ingress.516175195.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.516175195.description": "",
                            "ingress.516175195.from_port": "8080",
                            "ingress.516175195.ipv6_cidr_blocks.#": "0",
                            "ingress.516175195.prefix_list_ids.#": "0",
                            "ingress.516175195.protocol": "tcp",
                            "ingress.516175195.security_groups.#": "0",
                            "ingress.516175195.self": "false",
                            "ingress.516175195.to_port": "8080",
                            "name": "elasticsearch-es-prod-cluster-clients-security-group",
                            "owner_id": "102725665491",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "2",
                            "tags.Name": "es-prod-cluster-kibana",
                            "tags.cluster": "es-prod-cluster",
                            "vpc_id": "vpc-6d7bc306"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.elasticsearch_clients_security_group_elb": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-008db5f61dea46c55",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:102725665491:security-group/sg-008db5f61dea46c55",
                            "description": "client node access HTTP access outside from cluster",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-008db5f61dea46c55",
                            "ingress.#": "3",
                            "ingress.1994621032.cidr_blocks.#": "1",
                            "ingress.1994621032.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1994621032.description": "",
                            "ingress.1994621032.from_port": "3000",
                            "ingress.1994621032.ipv6_cidr_blocks.#": "0",
                            "ingress.1994621032.prefix_list_ids.#": "0",
                            "ingress.1994621032.protocol": "tcp",
                            "ingress.1994621032.security_groups.#": "0",
                            "ingress.1994621032.self": "false",
                            "ingress.1994621032.to_port": "3000",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2500694996.cidr_blocks.#": "1",
                            "ingress.2500694996.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2500694996.description": "",
                            "ingress.2500694996.from_port": "9200",
                            "ingress.2500694996.ipv6_cidr_blocks.#": "0",
                            "ingress.2500694996.prefix_list_ids.#": "0",
                            "ingress.2500694996.protocol": "tcp",
                            "ingress.2500694996.security_groups.#": "0",
                            "ingress.2500694996.self": "false",
                            "ingress.2500694996.to_port": "9200",
                            "name": "elasticsearch-es-prod-cluster-clients-security-group_elb",
                            "owner_id": "102725665491",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "2",
                            "tags.Name": "es-prod-cluster-elb",
                            "tags.cluster": "es-prod-cluster",
                            "vpc_id": "vpc-6d7bc306"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.elasticsearch_security_group": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-0472519fa772feb1c",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:102725665491:security-group/sg-0472519fa772feb1c",
                            "description": "Elasticsearch ports with ssh",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0472519fa772feb1c",
                            "ingress.#": "3",
                            "ingress.1927567964.cidr_blocks.#": "0",
                            "ingress.1927567964.description": "",
                            "ingress.1927567964.from_port": "8",
                            "ingress.1927567964.ipv6_cidr_blocks.#": "0",
                            "ingress.1927567964.prefix_list_ids.#": "0",
                            "ingress.1927567964.protocol": "icmp",
                            "ingress.1927567964.security_groups.#": "0",
                            "ingress.1927567964.self": "true",
                            "ingress.1927567964.to_port": "0",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.description": "",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.prefix_list_ids.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "ingress.3645327794.cidr_blocks.#": "0",
                            "ingress.3645327794.description": "",
                            "ingress.3645327794.from_port": "9200",
                            "ingress.3645327794.ipv6_cidr_blocks.#": "0",
                            "ingress.3645327794.prefix_list_ids.#": "0",
                            "ingress.3645327794.protocol": "tcp",
                            "ingress.3645327794.security_groups.#": "0",
                            "ingress.3645327794.self": "true",
                            "ingress.3645327794.to_port": "9400",
                            "name": "elasticsearch-es-prod-cluster-security-group",
                            "owner_id": "102725665491",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "2",
                            "tags.Name": "es-prod-cluster-elasticsearch",
                            "tags.cluster": "es-prod-cluster",
                            "vpc_id": "vpc-6d7bc306"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_ami.elasticsearch": {
                    "type": "aws_ami",
                    "depends_on": [],
                    "primary": {
                        "id": "ami-0cefa5d93ab05f8b9",
                        "attributes": {
                            "architecture": "x86_64",
                            "arn": "arn:aws:ec2:us-east-2::image/ami-0cefa5d93ab05f8b9",
                            "block_device_mappings.#": "3",
                            "block_device_mappings.1634610537.device_name": "/dev/sdb",
                            "block_device_mappings.1634610537.ebs.%": "0",
                            "block_device_mappings.1634610537.no_device": "",
                            "block_device_mappings.1634610537.virtual_name": "ephemeral0",
                            "block_device_mappings.2547816212.device_name": "/dev/sda1",
                            "block_device_mappings.2547816212.ebs.%": "6",
                            "block_device_mappings.2547816212.ebs.delete_on_termination": "true",
                            "block_device_mappings.2547816212.ebs.encrypted": "false",
                            "block_device_mappings.2547816212.ebs.iops": "0",
                            "block_device_mappings.2547816212.ebs.snapshot_id": "snap-06428314731d40918",
                            "block_device_mappings.2547816212.ebs.volume_size": "8",
                            "block_device_mappings.2547816212.ebs.volume_type": "gp2",
                            "block_device_mappings.2547816212.no_device": "",
                            "block_device_mappings.2547816212.virtual_name": "",
                            "block_device_mappings.3850042718.device_name": "/dev/sdc",
                            "block_device_mappings.3850042718.ebs.%": "0",
                            "block_device_mappings.3850042718.no_device": "",
                            "block_device_mappings.3850042718.virtual_name": "ephemeral1",
                            "creation_date": "2021-01-04T20:32:46.000Z",
                            "filter.#": "2",
                            "filter.1183270266.name": "tag:ImageType",
                            "filter.1183270266.values.#": "1",
                            "filter.1183270266.values.0": "elasticsearch-packer-image",
                            "filter.1353251163.name": "state",
                            "filter.1353251163.values.#": "1",
                            "filter.1353251163.values.0": "available",
                            "hypervisor": "xen",
                            "id": "ami-0cefa5d93ab05f8b9",
                            "image_id": "ami-0cefa5d93ab05f8b9",
                            "image_location": "102725665491/-2021-01-04T20-14-33Z",
                            "image_type": "machine",
                            "most_recent": "true",
                            "name": "-2021-01-04T20-14-33Z",
                            "owner_id": "102725665491",
                            "owners.#": "1",
                            "owners.0": "102725665491",
                            "product_codes.#": "0",
                            "public": "false",
                            "root_device_name": "/dev/sda1",
                            "root_device_type": "ebs",
                            "root_snapshot_id": "snap-06428314731d40918",
                            "sriov_net_support": "simple",
                            "state": "available",
                            "state_reason.%": "2",
                            "state_reason.code": "UNSET",
                            "state_reason.message": "UNSET",
                            "tags.%": "1",
                            "tags.ImageType": "elasticsearch-packer-image",
                            "virtualization_type": "hvm"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_ami.kibana_client": {
                    "type": "aws_ami",
                    "depends_on": [],
                    "primary": {
                        "id": "ami-0c2303831b8f84d93",
                        "attributes": {
                            "architecture": "x86_64",
                            "arn": "arn:aws:ec2:us-east-2::image/ami-0c2303831b8f84d93",
                            "block_device_mappings.#": "3",
                            "block_device_mappings.1634610537.device_name": "/dev/sdb",
                            "block_device_mappings.1634610537.ebs.%": "0",
                            "block_device_mappings.1634610537.no_device": "",
                            "block_device_mappings.1634610537.virtual_name": "ephemeral0",
                            "block_device_mappings.2547816212.device_name": "/dev/sda1",
                            "block_device_mappings.2547816212.ebs.%": "6",
                            "block_device_mappings.2547816212.ebs.delete_on_termination": "true",
                            "block_device_mappings.2547816212.ebs.encrypted": "false",
                            "block_device_mappings.2547816212.ebs.iops": "0",
                            "block_device_mappings.2547816212.ebs.snapshot_id": "snap-0bec3fa258cfa8ca5",
                            "block_device_mappings.2547816212.ebs.volume_size": "8",
                            "block_device_mappings.2547816212.ebs.volume_type": "gp2",
                            "block_device_mappings.2547816212.no_device": "",
                            "block_device_mappings.2547816212.virtual_name": "",
                            "block_device_mappings.3850042718.device_name": "/dev/sdc",
                            "block_device_mappings.3850042718.ebs.%": "0",
                            "block_device_mappings.3850042718.no_device": "",
                            "block_device_mappings.3850042718.virtual_name": "ephemeral1",
                            "creation_date": "2021-01-04T22:56:28.000Z",
                            "filter.#": "2",
                            "filter.1044635059.name": "tag:ImageType",
                            "filter.1044635059.values.#": "1",
                            "filter.1044635059.values.0": "kibana-packer-image",
                            "filter.1353251163.name": "state",
                            "filter.1353251163.values.#": "1",
                            "filter.1353251163.values.0": "available",
                            "hypervisor": "xen",
                            "id": "ami-0c2303831b8f84d93",
                            "image_id": "ami-0c2303831b8f84d93",
                            "image_location": "102725665491/-2021-01-04T22-54-04Z",
                            "image_type": "machine",
                            "most_recent": "true",
                            "name": "-2021-01-04T22-54-04Z",
                            "owner_id": "102725665491",
                            "owners.#": "1",
                            "owners.0": "102725665491",
                            "product_codes.#": "0",
                            "public": "false",
                            "root_device_name": "/dev/sda1",
                            "root_device_type": "ebs",
                            "root_snapshot_id": "snap-0bec3fa258cfa8ca5",
                            "sriov_net_support": "simple",
                            "state": "available",
                            "state_reason.%": "2",
                            "state_reason.code": "UNSET",
                            "state_reason.message": "UNSET",
                            "tags.%": "1",
                            "tags.ImageType": "kibana-packer-image",
                            "virtualization_type": "hvm"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2021-01-05 08:42:44.684665807 +0000 UTC",
                        "attributes": {
                            "group_names.#": "1",
                            "group_names.1951454386": "us-east-2",
                            "id": "2021-01-05 08:42:44.684665807 +0000 UTC",
                            "names.#": "3",
                            "names.0": "us-east-2a",
                            "names.1": "us-east-2b",
                            "names.2": "us-east-2c",
                            "zone_ids.#": "3",
                            "zone_ids.0": "use2-az1",
                            "zone_ids.1": "use2-az2",
                            "zone_ids.2": "use2-az3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_subnet_ids.selected": {
                    "type": "aws_subnet_ids",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-6d7bc306",
                        "attributes": {
                            "id": "vpc-6d7bc306",
                            "ids.#": "1",
                            "ids.2885426566": "subnet-eb7ede80",
                            "vpc_id": "vpc-6d7bc306"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_vpc.selected": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-6d7bc306",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-2:102725665491:vpc/vpc-6d7bc306",
                            "cidr_block": "172.31.0.0/16",
                            "cidr_block_associations.#": "1",
                            "cidr_block_associations.0.association_id": "vpc-cidr-assoc-ad62d8c6",
                            "cidr_block_associations.0.cidr_block": "172.31.0.0/16",
                            "cidr_block_associations.0.state": "associated",
                            "default": "true",
                            "dhcp_options_id": "dopt-23ed7048",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-6d7bc306",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-33fbba58",
                            "owner_id": "102725665491",
                            "state": "available",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.client_userdata_script": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_security_group.elasticsearch_security_group",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "5bb3257d201d526f030e1728e771f117e484702af993cf9ab7bafd97fbeedca9",
                        "attributes": {
                            "id": "5bb3257d201d526f030e1728e771f117e484702af993cf9ab7bafd97fbeedca9",
                            "rendered": "#!/bin/bash\nset -e\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n# Configure elasticsearch\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\ncluster.name: es-prod-cluster\n\ndiscovery.zen.minimum_master_nodes: 1\n\n# only data nodes should have ingest and http capabilities\nnode.master: false\nnode.data: false\nnode.ingest: false\nhttp.enabled: true\nxpack.security.enabled: false\npath.logs: /var/log/elasticsearch\nEOF\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\n\nnetwork.host: _ec2:privateIp_,localhost\nplugin.mandatory: discovery-ec2\ncloud.aws.region: us-east-2\ncloud.aws.protocol: http # no need in HTTPS for internal AWS calls\ndiscovery:\n    zen.hosts_provider: ec2\n    ec2.groups: sg-0472519fa772feb1c\n    ec2.host_type: private_ip\n    ec2.tag.Cluster: default-es-prod-cluster\n    ec2.availability_zones: us-east-2a,us-east-2b\nEOF\n\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/security/limits.conf\n# allow user 'elasticsearch' mlockall\nelasticsearch soft memlock unlimited\nelasticsearch hard memlock unlimited\nEOF\n\nsudo mkdir -p /etc/systemd/system/elasticsearch.service.d\ncat \u003c\u003c'EOF' \u003e\u003e/etc/systemd/system/elasticsearch.service.d/override.conf\n[Service]\nLimitMEMLOCK=infinity\nEOF\n\n# Setup heap size and memory locking\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/init.d/elasticsearch\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/default/elasticsearch\nsudo sed -i \"s/^-Xms2g/-Xms1g/\" /etc/elasticsearch/jvm.options\nsudo sed -i \"s/^-Xmx2g/-Xmx1g/\" /etc/elasticsearch/jvm.options\n\n# Storage\nsudo mkdir -p /var/log/elasticsearch\nsudo chown -R elasticsearch:elasticsearch /var/log/elasticsearch\n\n# we are assuming volume is declared and attached when data_dir is passed to the script\nif [ -n \"\" ]; then\n    sudo mkdir -p \n    sudo sed -i '$ a path.data: ' /etc/elasticsearch/elasticsearch.yml\n    sudo mkfs -t ext4 \n    sudo mount  \n    sudo echo \"  ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\n    sudo chown -R elasticsearch:elasticsearch \nfi\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    # Setup basic auth for nginx web front and start the service if exists\n    sudo htpasswd -bc /etc/nginx/conf.d/search.htpasswd admin \"change1st\"\n    sudo service nginx start\nfi\n\n# Start Elasticsearch\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch.service\nsudo systemctl start elasticsearch.service\n\n\n# Setup x-pack security also on Kibana configs where applicable\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"xpack.security.enabled: false\" | sudo tee -a /etc/kibana/kibana.yml\n    systemctl daemon-reload\n    systemctl enable kibana.service\n    service kibana restart\nfi\n\n\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    sudo rm /etc/grafana/grafana.ini\n    cat \u003c\u003c'EOF' \u003e\u003e/etc/grafana/grafana.ini\n[security]\nadmin_user = admin\nadmin_password = change1st\nEOF\n    sudo /bin/systemctl daemon-reload\n    sudo /bin/systemctl enable grafana-server.service\n    sudo service grafana-server start\nfi\n\nsleep 60\n\nif [ `systemctl is-failed elasticsearch.service` == 'failed' ];\nthen\n    log \"Elasticsearch unit failed to start\"\n    exit 1\nfi\n\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"Elasticsearch metric collector starting.....\"\n    docker run -d --net=host --restart always --name metric telenorhealth/es-monitor:latest\nfi\n",
                            "template": "#!/bin/bash\nset -e\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n# Configure elasticsearch\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\ncluster.name: ${es_cluster}\n\ndiscovery.zen.minimum_master_nodes: ${minimum_master_nodes}\n\n# only data nodes should have ingest and http capabilities\nnode.master: ${master}\nnode.data: ${data}\nnode.ingest: ${data}\nhttp.enabled: ${http_enabled}\nxpack.security.enabled: ${security_enabled}\npath.logs: ${elasticsearch_logs_dir}\nEOF\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\n\nnetwork.host: _ec2:privateIp_,localhost\nplugin.mandatory: discovery-ec2\ncloud.aws.region: ${aws_region}\ncloud.aws.protocol: http # no need in HTTPS for internal AWS calls\ndiscovery:\n    zen.hosts_provider: ec2\n    ec2.groups: ${security_groups}\n    ec2.host_type: private_ip\n    ec2.tag.Cluster: ${es_environment}\n    ec2.availability_zones: ${availability_zones}\nEOF\n\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/security/limits.conf\n# allow user 'elasticsearch' mlockall\nelasticsearch soft memlock unlimited\nelasticsearch hard memlock unlimited\nEOF\n\nsudo mkdir -p /etc/systemd/system/elasticsearch.service.d\ncat \u003c\u003c'EOF' \u003e\u003e/etc/systemd/system/elasticsearch.service.d/override.conf\n[Service]\nLimitMEMLOCK=infinity\nEOF\n\n# Setup heap size and memory locking\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/init.d/elasticsearch\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/default/elasticsearch\nsudo sed -i \"s/^-Xms2g/-Xms${heap_size}/\" /etc/elasticsearch/jvm.options\nsudo sed -i \"s/^-Xmx2g/-Xmx${heap_size}/\" /etc/elasticsearch/jvm.options\n\n# Storage\nsudo mkdir -p ${elasticsearch_logs_dir}\nsudo chown -R elasticsearch:elasticsearch ${elasticsearch_logs_dir}\n\n# we are assuming volume is declared and attached when data_dir is passed to the script\nif [ -n \"${elasticsearch_data_dir}\" ]; then\n    sudo mkdir -p ${elasticsearch_data_dir}\n    sudo sed -i '$ a path.data: ${elasticsearch_data_dir}' /etc/elasticsearch/elasticsearch.yml\n    sudo mkfs -t ext4 ${volume_name}\n    sudo mount ${volume_name} ${elasticsearch_data_dir}\n    sudo echo \"${volume_name} ${elasticsearch_data_dir} ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\n    sudo chown -R elasticsearch:elasticsearch ${elasticsearch_data_dir}\nfi\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    # Setup basic auth for nginx web front and start the service if exists\n    sudo htpasswd -bc /etc/nginx/conf.d/search.htpasswd ${client_user} \"${client_pwd}\"\n    sudo service nginx start\nfi\n\n# Start Elasticsearch\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch.service\nsudo systemctl start elasticsearch.service\n\n\n# Setup x-pack security also on Kibana configs where applicable\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"xpack.security.enabled: ${security_enabled}\" | sudo tee -a /etc/kibana/kibana.yml\n    systemctl daemon-reload\n    systemctl enable kibana.service\n    service kibana restart\nfi\n\n\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    sudo rm /etc/grafana/grafana.ini\n    cat \u003c\u003c'EOF' \u003e\u003e/etc/grafana/grafana.ini\n[security]\nadmin_user = ${client_user}\nadmin_password = ${client_pwd}\nEOF\n    sudo /bin/systemctl daemon-reload\n    sudo /bin/systemctl enable grafana-server.service\n    sudo service grafana-server start\nfi\n\nsleep 60\n\nif [ `systemctl is-failed elasticsearch.service` == 'failed' ];\nthen\n    log \"Elasticsearch unit failed to start\"\n    exit 1\nfi\n\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"Elasticsearch metric collector starting.....\"\n    docker run -d --net=host --restart always --name metric telenorhealth/es-monitor:latest\nfi\n",
                            "vars.%": "17",
                            "vars.availability_zones": "us-east-2a,us-east-2b",
                            "vars.aws_region": "us-east-2",
                            "vars.client_pwd": "change1st",
                            "vars.client_user": "admin",
                            "vars.cloud_provider": "aws",
                            "vars.data": "false",
                            "vars.elasticsearch_data_dir": "",
                            "vars.elasticsearch_logs_dir": "/var/log/elasticsearch",
                            "vars.es_cluster": "es-prod-cluster",
                            "vars.es_environment": "default-es-prod-cluster",
                            "vars.heap_size": "1g",
                            "vars.http_enabled": "true",
                            "vars.master": "false",
                            "vars.minimum_master_nodes": "1",
                            "vars.security_enabled": "false",
                            "vars.security_groups": "sg-0472519fa772feb1c",
                            "vars.volume_name": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.data_userdata_script": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_security_group.elasticsearch_security_group",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "1b2b0310fd708d6661313d306517f0982cc95725fe6230eafe955c8d4069f6d3",
                        "attributes": {
                            "id": "1b2b0310fd708d6661313d306517f0982cc95725fe6230eafe955c8d4069f6d3",
                            "rendered": "#!/bin/bash\nset -e\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n# Configure elasticsearch\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\ncluster.name: es-prod-cluster\n\ndiscovery.zen.minimum_master_nodes: 1\n\n# only data nodes should have ingest and http capabilities\nnode.master: false\nnode.data: true\nnode.ingest: true\nhttp.enabled: true\nxpack.security.enabled: false\npath.logs: /var/log/elasticsearch\nEOF\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\n\nnetwork.host: _ec2:privateIp_,localhost\nplugin.mandatory: discovery-ec2\ncloud.aws.region: us-east-2\ncloud.aws.protocol: http # no need in HTTPS for internal AWS calls\ndiscovery:\n    zen.hosts_provider: ec2\n    ec2.groups: sg-0472519fa772feb1c\n    ec2.host_type: private_ip\n    ec2.tag.Cluster: default-es-prod-cluster\n    ec2.availability_zones: us-east-2a,us-east-2b\nEOF\n\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/security/limits.conf\n# allow user 'elasticsearch' mlockall\nelasticsearch soft memlock unlimited\nelasticsearch hard memlock unlimited\nEOF\n\nsudo mkdir -p /etc/systemd/system/elasticsearch.service.d\ncat \u003c\u003c'EOF' \u003e\u003e/etc/systemd/system/elasticsearch.service.d/override.conf\n[Service]\nLimitMEMLOCK=infinity\nEOF\n\n# Setup heap size and memory locking\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/init.d/elasticsearch\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/default/elasticsearch\nsudo sed -i \"s/^-Xms2g/-Xms3g/\" /etc/elasticsearch/jvm.options\nsudo sed -i \"s/^-Xmx2g/-Xmx3g/\" /etc/elasticsearch/jvm.options\n\n# Storage\nsudo mkdir -p /var/log/elasticsearch\nsudo chown -R elasticsearch:elasticsearch /var/log/elasticsearch\n\n# we are assuming volume is declared and attached when data_dir is passed to the script\nif [ -n \"/opt/elasticsearch/data\" ]; then\n    sudo mkdir -p /opt/elasticsearch/data\n    sudo sed -i '$ a path.data: /opt/elasticsearch/data' /etc/elasticsearch/elasticsearch.yml\n    sudo mkfs -t ext4 /dev/xvdh\n    sudo mount /dev/xvdh /opt/elasticsearch/data\n    sudo echo \"/dev/xvdh /opt/elasticsearch/data ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\n    sudo chown -R elasticsearch:elasticsearch /opt/elasticsearch/data\nfi\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    # Setup basic auth for nginx web front and start the service if exists\n    sudo htpasswd -bc /etc/nginx/conf.d/search.htpasswd  \"\"\n    sudo service nginx start\nfi\n\n# Start Elasticsearch\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch.service\nsudo systemctl start elasticsearch.service\n\n\n# Setup x-pack security also on Kibana configs where applicable\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"xpack.security.enabled: false\" | sudo tee -a /etc/kibana/kibana.yml\n    systemctl daemon-reload\n    systemctl enable kibana.service\n    service kibana restart\nfi\n\n\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    sudo rm /etc/grafana/grafana.ini\n    cat \u003c\u003c'EOF' \u003e\u003e/etc/grafana/grafana.ini\n[security]\nadmin_user = \nadmin_password = \nEOF\n    sudo /bin/systemctl daemon-reload\n    sudo /bin/systemctl enable grafana-server.service\n    sudo service grafana-server start\nfi\n\nsleep 60\n\nif [ `systemctl is-failed elasticsearch.service` == 'failed' ];\nthen\n    log \"Elasticsearch unit failed to start\"\n    exit 1\nfi\n\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"Elasticsearch metric collector starting.....\"\n    docker run -d --net=host --restart always --name metric telenorhealth/es-monitor:latest\nfi\n",
                            "template": "#!/bin/bash\nset -e\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n# Configure elasticsearch\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\ncluster.name: ${es_cluster}\n\ndiscovery.zen.minimum_master_nodes: ${minimum_master_nodes}\n\n# only data nodes should have ingest and http capabilities\nnode.master: ${master}\nnode.data: ${data}\nnode.ingest: ${data}\nhttp.enabled: ${http_enabled}\nxpack.security.enabled: ${security_enabled}\npath.logs: ${elasticsearch_logs_dir}\nEOF\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\n\nnetwork.host: _ec2:privateIp_,localhost\nplugin.mandatory: discovery-ec2\ncloud.aws.region: ${aws_region}\ncloud.aws.protocol: http # no need in HTTPS for internal AWS calls\ndiscovery:\n    zen.hosts_provider: ec2\n    ec2.groups: ${security_groups}\n    ec2.host_type: private_ip\n    ec2.tag.Cluster: ${es_environment}\n    ec2.availability_zones: ${availability_zones}\nEOF\n\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/security/limits.conf\n# allow user 'elasticsearch' mlockall\nelasticsearch soft memlock unlimited\nelasticsearch hard memlock unlimited\nEOF\n\nsudo mkdir -p /etc/systemd/system/elasticsearch.service.d\ncat \u003c\u003c'EOF' \u003e\u003e/etc/systemd/system/elasticsearch.service.d/override.conf\n[Service]\nLimitMEMLOCK=infinity\nEOF\n\n# Setup heap size and memory locking\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/init.d/elasticsearch\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/default/elasticsearch\nsudo sed -i \"s/^-Xms2g/-Xms${heap_size}/\" /etc/elasticsearch/jvm.options\nsudo sed -i \"s/^-Xmx2g/-Xmx${heap_size}/\" /etc/elasticsearch/jvm.options\n\n# Storage\nsudo mkdir -p ${elasticsearch_logs_dir}\nsudo chown -R elasticsearch:elasticsearch ${elasticsearch_logs_dir}\n\n# we are assuming volume is declared and attached when data_dir is passed to the script\nif [ -n \"${elasticsearch_data_dir}\" ]; then\n    sudo mkdir -p ${elasticsearch_data_dir}\n    sudo sed -i '$ a path.data: ${elasticsearch_data_dir}' /etc/elasticsearch/elasticsearch.yml\n    sudo mkfs -t ext4 ${volume_name}\n    sudo mount ${volume_name} ${elasticsearch_data_dir}\n    sudo echo \"${volume_name} ${elasticsearch_data_dir} ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\n    sudo chown -R elasticsearch:elasticsearch ${elasticsearch_data_dir}\nfi\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    # Setup basic auth for nginx web front and start the service if exists\n    sudo htpasswd -bc /etc/nginx/conf.d/search.htpasswd ${client_user} \"${client_pwd}\"\n    sudo service nginx start\nfi\n\n# Start Elasticsearch\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch.service\nsudo systemctl start elasticsearch.service\n\n\n# Setup x-pack security also on Kibana configs where applicable\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"xpack.security.enabled: ${security_enabled}\" | sudo tee -a /etc/kibana/kibana.yml\n    systemctl daemon-reload\n    systemctl enable kibana.service\n    service kibana restart\nfi\n\n\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    sudo rm /etc/grafana/grafana.ini\n    cat \u003c\u003c'EOF' \u003e\u003e/etc/grafana/grafana.ini\n[security]\nadmin_user = ${client_user}\nadmin_password = ${client_pwd}\nEOF\n    sudo /bin/systemctl daemon-reload\n    sudo /bin/systemctl enable grafana-server.service\n    sudo service grafana-server start\nfi\n\nsleep 60\n\nif [ `systemctl is-failed elasticsearch.service` == 'failed' ];\nthen\n    log \"Elasticsearch unit failed to start\"\n    exit 1\nfi\n\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"Elasticsearch metric collector starting.....\"\n    docker run -d --net=host --restart always --name metric telenorhealth/es-monitor:latest\nfi\n",
                            "vars.%": "17",
                            "vars.availability_zones": "us-east-2a,us-east-2b",
                            "vars.aws_region": "us-east-2",
                            "vars.client_pwd": "",
                            "vars.client_user": "",
                            "vars.cloud_provider": "aws",
                            "vars.data": "true",
                            "vars.elasticsearch_data_dir": "/opt/elasticsearch/data",
                            "vars.elasticsearch_logs_dir": "/var/log/elasticsearch",
                            "vars.es_cluster": "es-prod-cluster",
                            "vars.es_environment": "default-es-prod-cluster",
                            "vars.heap_size": "3g",
                            "vars.http_enabled": "true",
                            "vars.master": "false",
                            "vars.minimum_master_nodes": "1",
                            "vars.security_enabled": "false",
                            "vars.security_groups": "sg-0472519fa772feb1c",
                            "vars.volume_name": "/dev/xvdh"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.master_userdata_script": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_security_group.elasticsearch_security_group",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "c96018a38283b274783d839f1d54ad188fc362c0c9661bb5a4929025b8cd9fa7",
                        "attributes": {
                            "id": "c96018a38283b274783d839f1d54ad188fc362c0c9661bb5a4929025b8cd9fa7",
                            "rendered": "#!/bin/bash\nset -e\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n# Configure elasticsearch\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\ncluster.name: es-prod-cluster\n\ndiscovery.zen.minimum_master_nodes: 1\n\n# only data nodes should have ingest and http capabilities\nnode.master: true\nnode.data: false\nnode.ingest: false\nhttp.enabled: false\nxpack.security.enabled: false\npath.logs: /var/log/elasticsearch\nEOF\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\n\nnetwork.host: _ec2:privateIp_,localhost\nplugin.mandatory: discovery-ec2\ncloud.aws.region: us-east-2\ncloud.aws.protocol: http # no need in HTTPS for internal AWS calls\ndiscovery:\n    zen.hosts_provider: ec2\n    ec2.groups: sg-0472519fa772feb1c\n    ec2.host_type: private_ip\n    ec2.tag.Cluster: default-es-prod-cluster\n    ec2.availability_zones: us-east-2a,us-east-2b\nEOF\n\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/security/limits.conf\n# allow user 'elasticsearch' mlockall\nelasticsearch soft memlock unlimited\nelasticsearch hard memlock unlimited\nEOF\n\nsudo mkdir -p /etc/systemd/system/elasticsearch.service.d\ncat \u003c\u003c'EOF' \u003e\u003e/etc/systemd/system/elasticsearch.service.d/override.conf\n[Service]\nLimitMEMLOCK=infinity\nEOF\n\n# Setup heap size and memory locking\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/init.d/elasticsearch\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/default/elasticsearch\nsudo sed -i \"s/^-Xms2g/-Xms2g/\" /etc/elasticsearch/jvm.options\nsudo sed -i \"s/^-Xmx2g/-Xmx2g/\" /etc/elasticsearch/jvm.options\n\n# Storage\nsudo mkdir -p /var/log/elasticsearch\nsudo chown -R elasticsearch:elasticsearch /var/log/elasticsearch\n\n# we are assuming volume is declared and attached when data_dir is passed to the script\nif [ -n \"\" ]; then\n    sudo mkdir -p \n    sudo sed -i '$ a path.data: ' /etc/elasticsearch/elasticsearch.yml\n    sudo mkfs -t ext4 \n    sudo mount  \n    sudo echo \"  ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\n    sudo chown -R elasticsearch:elasticsearch \nfi\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    # Setup basic auth for nginx web front and start the service if exists\n    sudo htpasswd -bc /etc/nginx/conf.d/search.htpasswd  \"\"\n    sudo service nginx start\nfi\n\n# Start Elasticsearch\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch.service\nsudo systemctl start elasticsearch.service\n\n\n# Setup x-pack security also on Kibana configs where applicable\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"xpack.security.enabled: false\" | sudo tee -a /etc/kibana/kibana.yml\n    systemctl daemon-reload\n    systemctl enable kibana.service\n    service kibana restart\nfi\n\n\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    sudo rm /etc/grafana/grafana.ini\n    cat \u003c\u003c'EOF' \u003e\u003e/etc/grafana/grafana.ini\n[security]\nadmin_user = \nadmin_password = \nEOF\n    sudo /bin/systemctl daemon-reload\n    sudo /bin/systemctl enable grafana-server.service\n    sudo service grafana-server start\nfi\n\nsleep 60\n\nif [ `systemctl is-failed elasticsearch.service` == 'failed' ];\nthen\n    log \"Elasticsearch unit failed to start\"\n    exit 1\nfi\n\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"Elasticsearch metric collector starting.....\"\n    docker run -d --net=host --restart always --name metric telenorhealth/es-monitor:latest\nfi\n",
                            "template": "#!/bin/bash\nset -e\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n# Configure elasticsearch\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\ncluster.name: ${es_cluster}\n\ndiscovery.zen.minimum_master_nodes: ${minimum_master_nodes}\n\n# only data nodes should have ingest and http capabilities\nnode.master: ${master}\nnode.data: ${data}\nnode.ingest: ${data}\nhttp.enabled: ${http_enabled}\nxpack.security.enabled: ${security_enabled}\npath.logs: ${elasticsearch_logs_dir}\nEOF\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/elasticsearch/elasticsearch.yml\n\nnetwork.host: _ec2:privateIp_,localhost\nplugin.mandatory: discovery-ec2\ncloud.aws.region: ${aws_region}\ncloud.aws.protocol: http # no need in HTTPS for internal AWS calls\ndiscovery:\n    zen.hosts_provider: ec2\n    ec2.groups: ${security_groups}\n    ec2.host_type: private_ip\n    ec2.tag.Cluster: ${es_environment}\n    ec2.availability_zones: ${availability_zones}\nEOF\n\n\n\ncat \u003c\u003c'EOF' \u003e\u003e/etc/security/limits.conf\n# allow user 'elasticsearch' mlockall\nelasticsearch soft memlock unlimited\nelasticsearch hard memlock unlimited\nEOF\n\nsudo mkdir -p /etc/systemd/system/elasticsearch.service.d\ncat \u003c\u003c'EOF' \u003e\u003e/etc/systemd/system/elasticsearch.service.d/override.conf\n[Service]\nLimitMEMLOCK=infinity\nEOF\n\n# Setup heap size and memory locking\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/init.d/elasticsearch\nsudo sed -i 's/#MAX_LOCKED_MEMORY=.*$/MAX_LOCKED_MEMORY=unlimited/' /etc/default/elasticsearch\nsudo sed -i \"s/^-Xms2g/-Xms${heap_size}/\" /etc/elasticsearch/jvm.options\nsudo sed -i \"s/^-Xmx2g/-Xmx${heap_size}/\" /etc/elasticsearch/jvm.options\n\n# Storage\nsudo mkdir -p ${elasticsearch_logs_dir}\nsudo chown -R elasticsearch:elasticsearch ${elasticsearch_logs_dir}\n\n# we are assuming volume is declared and attached when data_dir is passed to the script\nif [ -n \"${elasticsearch_data_dir}\" ]; then\n    sudo mkdir -p ${elasticsearch_data_dir}\n    sudo sed -i '$ a path.data: ${elasticsearch_data_dir}' /etc/elasticsearch/elasticsearch.yml\n    sudo mkfs -t ext4 ${volume_name}\n    sudo mount ${volume_name} ${elasticsearch_data_dir}\n    sudo echo \"${volume_name} ${elasticsearch_data_dir} ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\n    sudo chown -R elasticsearch:elasticsearch ${elasticsearch_data_dir}\nfi\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    # Setup basic auth for nginx web front and start the service if exists\n    sudo htpasswd -bc /etc/nginx/conf.d/search.htpasswd ${client_user} \"${client_pwd}\"\n    sudo service nginx start\nfi\n\n# Start Elasticsearch\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch.service\nsudo systemctl start elasticsearch.service\n\n\n# Setup x-pack security also on Kibana configs where applicable\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"xpack.security.enabled: ${security_enabled}\" | sudo tee -a /etc/kibana/kibana.yml\n    systemctl daemon-reload\n    systemctl enable kibana.service\n    service kibana restart\nfi\n\n\n\nif [ -f \"/etc/nginx/nginx.conf\" ]; then\n    sudo rm /etc/grafana/grafana.ini\n    cat \u003c\u003c'EOF' \u003e\u003e/etc/grafana/grafana.ini\n[security]\nadmin_user = ${client_user}\nadmin_password = ${client_pwd}\nEOF\n    sudo /bin/systemctl daemon-reload\n    sudo /bin/systemctl enable grafana-server.service\n    sudo service grafana-server start\nfi\n\nsleep 60\n\nif [ `systemctl is-failed elasticsearch.service` == 'failed' ];\nthen\n    log \"Elasticsearch unit failed to start\"\n    exit 1\nfi\n\nif [ -f \"/etc/kibana/kibana.yml\" ]; then\n    echo \"Elasticsearch metric collector starting.....\"\n    docker run -d --net=host --restart always --name metric telenorhealth/es-monitor:latest\nfi\n",
                            "vars.%": "17",
                            "vars.availability_zones": "us-east-2a,us-east-2b",
                            "vars.aws_region": "us-east-2",
                            "vars.client_pwd": "",
                            "vars.client_user": "",
                            "vars.cloud_provider": "aws",
                            "vars.data": "false",
                            "vars.elasticsearch_data_dir": "",
                            "vars.elasticsearch_logs_dir": "/var/log/elasticsearch",
                            "vars.es_cluster": "es-prod-cluster",
                            "vars.es_environment": "default-es-prod-cluster",
                            "vars.heap_size": "2g",
                            "vars.http_enabled": "false",
                            "vars.master": "true",
                            "vars.minimum_master_nodes": "1",
                            "vars.security_enabled": "false",
                            "vars.security_groups": "sg-0472519fa772feb1c",
                            "vars.volume_name": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
